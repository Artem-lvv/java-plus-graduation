spring:
  kafka:
    consumer:
      bootstrap-servers: kafka:29092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema.registry.url: http://schema-registry:9102
        specific.avro.reader: true
    producer:
      bootstrap-servers: kafka:29092
      properties:
        schema.registry.url: http://schema-registry:9102
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer

  cloud:
    loadbalancer:
      retry:
        enabled: true
        retry-on-all-operations: true
      service-discovery:
        timeout: 1s

server:
  port: 0

stats:
  events-similarity:
    v1: stats.events-similarity.v1

resilience4j.circuitbreaker:
  instances:
    myService:
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 10000 # 10 секунд в миллисекундах
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: COUNT_BASED
      minimumNumberOfCalls: 5
      automaticTransitionFromOpenToHalfOpenEnabled: true